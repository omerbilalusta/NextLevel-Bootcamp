// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NextLevel_Bootcamp_FinalWork.Models.AppDbContext;

#nullable disable

namespace NextLevel_Bootcamp_FinalWork.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230922092919_first_migration")]
    partial class first_migration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NextLevel_Bootcamp_FinalWork.Models.Answer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionID")
                        .HasColumnType("int");

                    b.Property<bool>("Type")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("QuestionID");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("NextLevel_Bootcamp_FinalWork.Models.Question", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool?>("Approved")
                        .HasColumnType("bit");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("NextLevel_Bootcamp_FinalWork.Models.Quiz", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<string>("quizType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("Quizzes");
                });

            modelBuilder.Entity("NextLevel_Bootcamp_FinalWork.Models.Quiz_Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("QuestionID")
                        .HasColumnType("int");

                    b.Property<int>("QuizID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionID");

                    b.HasIndex("QuizID");

                    b.ToTable("Quiz_Questions");
                });

            modelBuilder.Entity("NextLevel_Bootcamp_FinalWork.Models.Scoreboard", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("CorrectAnswerCount")
                        .HasColumnType("int");

                    b.Property<int?>("FalseAnswerCount")
                        .HasColumnType("int");

                    b.Property<int?>("QuizID")
                        .HasColumnType("int");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("QuizID");

                    b.HasIndex("UserID");

                    b.ToTable("Scoreboards");
                });

            modelBuilder.Entity("NextLevel_Bootcamp_FinalWork.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserTypeID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UserTypeID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("NextLevel_Bootcamp_FinalWork.Models.UserType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("UserTypes");
                });

            modelBuilder.Entity("NextLevel_Bootcamp_FinalWork.Models.Answer", b =>
                {
                    b.HasOne("NextLevel_Bootcamp_FinalWork.Models.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("NextLevel_Bootcamp_FinalWork.Models.Quiz", b =>
                {
                    b.HasOne("NextLevel_Bootcamp_FinalWork.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("NextLevel_Bootcamp_FinalWork.Models.Quiz_Question", b =>
                {
                    b.HasOne("NextLevel_Bootcamp_FinalWork.Models.Question", "Question")
                        .WithMany("Quiz_Questions")
                        .HasForeignKey("QuestionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NextLevel_Bootcamp_FinalWork.Models.Quiz", "Quiz")
                        .WithMany("Quiz_Questions")
                        .HasForeignKey("QuizID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("NextLevel_Bootcamp_FinalWork.Models.Scoreboard", b =>
                {
                    b.HasOne("NextLevel_Bootcamp_FinalWork.Models.Quiz", "Quiz")
                        .WithMany("Scoreboards")
                        .HasForeignKey("QuizID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("NextLevel_Bootcamp_FinalWork.Models.User", "User")
                        .WithMany("Scoreboards")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Quiz");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NextLevel_Bootcamp_FinalWork.Models.User", b =>
                {
                    b.HasOne("NextLevel_Bootcamp_FinalWork.Models.UserType", "UserType")
                        .WithMany("Users")
                        .HasForeignKey("UserTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserType");
                });

            modelBuilder.Entity("NextLevel_Bootcamp_FinalWork.Models.Question", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("Quiz_Questions");
                });

            modelBuilder.Entity("NextLevel_Bootcamp_FinalWork.Models.Quiz", b =>
                {
                    b.Navigation("Quiz_Questions");

                    b.Navigation("Scoreboards");
                });

            modelBuilder.Entity("NextLevel_Bootcamp_FinalWork.Models.User", b =>
                {
                    b.Navigation("Scoreboards");
                });

            modelBuilder.Entity("NextLevel_Bootcamp_FinalWork.Models.UserType", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
